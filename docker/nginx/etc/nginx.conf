user nginx;
pid /run/nginx.pid;

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

worker_processes auto;
worker_rlimit_nofile 65535;

events {
	multi_accept on;
	worker_connections 65535;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 2048M;

	# MIME
	include mime.types;
	default_type application/octet-stream;

	# logging
	access_log /app/log/nginx.access.log;
	error_log /app/log/nginx.error.log warn;

	# SSL
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;

	# Diffie-Hellman parameter for DHE ciphersuites
	ssl_dhparam /etc/nginx/dhparam.pem;

	# OWASP A (Advanced) configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256;
	ssl_prefer_server_ciphers on;

	# www.dev.loc
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;

		server_name .dev.loc;
		set $base /app;
		root $base/;

		# SSL
		ssl_certificate /etc/nginx/ssl/dev.loc.crt;
		ssl_certificate_key /etc/nginx/ssl/dev.loc.key;

		# security headers
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-XSS-Protection "1; mode=block" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Referrer-Policy "no-referrer" always;
		add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

		# . files
		location ~ /\.(?!well-known) {
			deny all;
		}

		# logging
		access_log /app/log/nginx.access.log;
		error_log /app/log/nginx.error.log warn;

		# index.php
		index index.php;

		# index.php fallback
		location / {
			try_files $uri $uri/ /index.php?$query_string;
		}

		# handle .php
		location ~ \.php$ {
			proxy_set_header X-Real-IP  $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header Host $host;
			proxy_pass http://httpd:80;
		}

		# favicon.ico
		location = /favicon.(ico|png) {
			log_not_found off;
			access_log off;
		}

		# robots.txt
		location = /robots.txt {
			log_not_found off;
			access_log off;
		}

		location = /humans.txt {
			access_log off;
			log_not_found off;
		}

		location ~ \.(neon|ini|log|lock|yml|json)$ {
			deny all;
			access_log off;
			log_not_found off;
		}

		location ~ /\.$ {
			deny all;
			access_log off;
			log_not_found off;
		}

		# assets, media
		location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
			expires 7d;
			access_log off;
		}

		# svg, fonts
		location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
			add_header Access-Control-Allow-Origin "*";
			expires 7d;
			access_log off;
		}

		# gzip
		gzip on;
		gzip_static on;
		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

		# brotli
		brotli on;
		brotli_static on;
		brotli_comp_level 6;
		brotli_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
	}

	# HTTP redirect
	server {
		listen 80;
		listen [::]:80;

		server_name .dev.loc;

		return 301 https://dev.loc$request_uri;
	}
}
